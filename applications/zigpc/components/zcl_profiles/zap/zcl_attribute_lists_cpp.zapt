/*******************************************************************************
 * # License
 * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * The licensor of this software is Silicon Laboratories Inc. Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement. This
 * software is distributed to you in Source Code format and is governed by the
 * sections of the MSLA applicable to Source Code.
 *
 ******************************************************************************/

{{zap_header}}
#include "zcl_attribute_info.h"
#include "zcl_profile_list_int.h"
#include "zcl_definitions.h"

{{#zcl_atomics}}{{zcl_type_map_set_item this.name this.name}}{{/zcl_atomics}}
{{#zcl_enums}}{{#if type}}{{zcl_type_map_set_item this.label this.type}}{{/if}}{{/zcl_enums}}
{{#zcl_bitmaps}}{{#if type}}{{zcl_type_map_set_item this.label this.type}}{{/if}}{{/zcl_bitmaps}}

{{#after}}

//Lists of attributes
{{#zcl_clusters}}
{{#if (supportedAttributes label)}}

/**
 * @brief ZCL Attribute list for {{label}} cluster
**/
const zcl_attribute_t {{asSnakeCaseLower label}}_attribute_list[] = {
{{#zcl_attributes_server}}
  {
    {{asZigPCZclClusterType parent}}, // cluster_id
    {{asZigPCZclClusterType parent}}_ATTR_{{asSnakeCaseUpper label}}, // attribute_id
    (e_zcl_attribute_type) {{asZigPCZclDataType (zcl_type_map_get_item type)}}, // type
    {{isReportable}}, // is_reportable
    "{{label}}", // attribute_name
    "", // desired_payload
    "", // reported_payload
  },
{{/zcl_attributes_server}}
    {
        {{asZigPCZclClusterType this}}, // cluster_id
        ZIGPC_ZCL_GLOBAL_ATTR_CLUSTER_REVISION, // attribute_id
        (e_zcl_attribute_type) ZIGPC_ZCL_DATA_TYPE_UINT16, // type
        false, // is_reportable
        "ClusterRevision", // attribute_name
        "", // desired_payload
        "", // reported_payload
    },
};

static const unsigned int {{asSnakeCaseLower label}}_num_attributes =
    sizeof({{asSnakeCaseLower label}}_attribute_list)/ sizeof(zcl_attribute_t);
{{/if}}
{{/zcl_clusters}}

//Lists of zcl_profiles
{{#zcl_clusters}}
{{#if (supportedAttributes label)}}

static const zcl_profile_t {{asSnakeCaseLower label}}_profile = {
    "{{label}}", //Cluster Name
    {{asHex code}}, //Cluser ID
    {{asSnakeCaseLower label}}_attribute_list,
    {{asSnakeCaseLower label}}_num_attributes //number of attributes
};

{{/if}}
{{/zcl_clusters}}

//Add into the profile map from zcl_attribute_info.cpp
sl_status_t zigpc_zcl_profiles_init()
{
  std::list<zcl_profile_t> &profile_list = zigpc_zcl_profiles_get_profile_list();

{{#zcl_clusters}}
{{#if (supportedAttributes label)}}
  profile_list.push_back({{asSnakeCaseLower label}}_profile);
{{/if}}
{{/zcl_clusters}}

  return SL_STATUS_OK;
}
{{/after}}
