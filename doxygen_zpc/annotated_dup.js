var annotated_dup =
[
    [ "_assign_return_route_", "struct__assign__return__route__.html", "struct__assign__return__route__" ],
    [ "_authdata_", "struct__authdata__.html", "struct__authdata__" ],
    [ "_NVR_FLASH_STRUCT_", "struct__NVR__FLASH__STRUCT__.html", "struct__NVR__FLASH__STRUCT__" ],
    [ "_protocol_metadata_", "struct__protocol__metadata__.html", "struct__protocol__metadata__" ],
    [ "_request_node_info_frame_t_", "struct__request__node__info__frame__t__.html", "struct__request__node__info__frame__t__" ],
    [ "_S_ROUTE_LINK_", "struct__S__ROUTE__LINK__.html", "struct__S__ROUTE__LINK__" ],
    [ "_ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME_", "struct__ZW__COMMAND__FIRST__FRAGMENT__1BYTE__FRAME__.html", "struct__ZW__COMMAND__FIRST__FRAGMENT__1BYTE__FRAME__" ],
    [ "_ZW_COMMAND_SEGMENT_COMPLETE_V2_FRAME_", "struct__ZW__COMMAND__SEGMENT__COMPLETE__V2__FRAME__.html", "struct__ZW__COMMAND__SEGMENT__COMPLETE__V2__FRAME__" ],
    [ "_ZW_COMMAND_SEGMENT_REQUEST_V2_FRAME_", "struct__ZW__COMMAND__SEGMENT__REQUEST__V2__FRAME__.html", "struct__ZW__COMMAND__SEGMENT__REQUEST__V2__FRAME__" ],
    [ "_ZW_COMMAND_SEGMENT_WAIT_V2_FRAME_", "struct__ZW__COMMAND__SEGMENT__WAIT__V2__FRAME__.html", "struct__ZW__COMMAND__SEGMENT__WAIT__V2__FRAME__" ],
    [ "_ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME_", "struct__ZW__COMMAND__SUBSEQUENT__FRAGMENT__1BYTE__FRAME__.html", "struct__ZW__COMMAND__SUBSEQUENT__FRAGMENT__1BYTE__FRAME__" ],
    [ "_ZW_MULTI_DEST_", "struct__ZW__MULTI__DEST__.html", "struct__ZW__MULTI__DEST__" ],
    [ "_zwapi_protocol_version_information_t_", "struct__zwapi__protocol__version__information__t__.html", "struct__zwapi__protocol__version__information__t__" ],
    [ "association_compare", "structassociation__compare.html", "structassociation__compare" ],
    [ "association_get_frame", "structassociation__get__frame.html", "structassociation__get__frame" ],
    [ "association_group_command_list_report_frame", "structassociation__group__command__list__report__frame.html", "structassociation__group__command__list__report__frame" ],
    [ "association_group_info_report_frame", "structassociation__group__info__report__frame.html", "structassociation__group__info__report__frame" ],
    [ "association_group_name_report_frame", "structassociation__group__name__report__frame.html", "structassociation__group__name__report__frame" ],
    [ "association_grouping_report_frame", "structassociation__grouping__report__frame.html", "structassociation__grouping__report__frame" ],
    [ "association_report_frame", "structassociation__report__frame.html", "structassociation__report__frame" ],
    [ "association_set_frame", "structassociation__set__frame.html", "structassociation__set__frame" ],
    [ "association_specific_report_frame", "structassociation__specific__report__frame.html", "structassociation__specific__report__frame" ],
    [ "association_t", "structassociation__t.html", "structassociation__t" ],
    [ "cb", "structcb.html", "structcb" ],
    [ "central_scene_state", "structcentral__scene__state.html", "structcentral__scene__state" ],
    [ "chip_descriptor", "structchip__descriptor.html", "structchip__descriptor" ],
    [ "date_time_t", "structdate__time__t.html", "structdate__time__t" ],
    [ "incoming_frame_item_compare", "structincoming__frame__item__compare.html", "structincoming__frame__item__compare" ],
    [ "LEARN_INFO", "structLEARN__INFO.html", "structLEARN__INFO" ],
    [ "list_elem", "structlist__elem.html", "structlist__elem" ],
    [ "meter_reset_v6_frame", "structmeter__reset__v6__frame.html", "structmeter__reset__v6__frame" ],
    [ "mpan_entry", "structmpan__entry.html", "structmpan__entry" ],
    [ "multicast_follow_up_session_state", "structmulticast__follow__up__session__state.html", "structmulticast__follow__up__session__state" ],
    [ "multilevel_switch_state", "structmultilevel__switch__state.html", "structmultilevel__switch__state" ],
    [ "network_mgmt_state", "structnetwork__mgmt__state.html", "structnetwork__mgmt__state" ],
    [ "node_type_t", "structnode__type__t.html", "structnode__type__t" ],
    [ "nonce", "structnonce.html", "structnonce" ],
    [ "nonce_block_t", "structnonce__block__t.html", "structnonce__block__t" ],
    [ "nvm_config", "structnvm__config.html", "structnvm__config" ],
    [ "power_level_setting", "structpower__level__setting.html", "structpower__level__setting" ],
    [ "power_level_test", "structpower__level__test.html", "structpower__level__test" ],
    [ "priority_queue", "classpriority__queue.html", "classpriority__queue" ],
    [ "queue_element_qos_compare", "structqueue__element__qos__compare.html", "structqueue__element__qos__compare" ],
    [ "receiving_cntrl_blk", "structreceiving__cntrl__blk.html", "structreceiving__cntrl__blk" ],
    [ "resolution_map", "structresolution__map.html", "structresolution__map" ],
    [ "rssi_val", "structrssi__val.html", "structrssi__val" ],
    [ "rx_session_t", "structrx__session__t.html", "structrx__session__t" ],
    [ "rx_timer_expired_data", "structrx__timer__expired__data.html", "structrx__timer__expired__data" ],
    [ "s0_sm_t", "structs0__sm__t.html", "structs0__sm__t" ],
    [ "s0_transition_t", "structs0__transition__t.html", "structs0__transition__t" ],
    [ "s2_transport_session_state", "structs2__transport__session__state.html", "structs2__transport__session__state" ],
    [ "scene_id_group_id_t", "structscene__id__group__id__t.html", "structscene__id__group__id__t" ],
    [ "sec_tx_session", "structsec__tx__session.html", "structsec__tx__session" ],
    [ "send_data_state", "structsend__data__state.html", "structsend__data__state" ],
    [ "sending_cntrl_blk", "structsending__cntrl__blk.html", "structsending__cntrl__blk" ],
    [ "smartstart_event_data", "structsmartstart__event__data.html", "structsmartstart__event__data" ],
    [ "sound_switch_configuration", "structsound__switch__configuration.html", "structsound__switch__configuration" ],
    [ "span_entry", "structspan__entry.html", "structspan__entry" ],
    [ "supervised_session", "structsupervised__session.html", "structsupervised__session" ],
    [ "supervision_session", "structsupervision__session.html", "structsupervision__session" ],
    [ "transition_t", "structtransition__t.html", "structtransition__t" ],
    [ "tx_power_level_t", "structtx__power__level__t.html", "structtx__power__level__t" ],
    [ "zpc_config_t", "structzpc__config__t.html", "structzpc__config__t" ],
    [ "zwapi_callbacks", "structzwapi__callbacks.html", "structzwapi__callbacks" ],
    [ "zwapi_chip_data_t", "structzwapi__chip__data__t.html", "structzwapi__chip__data__t" ],
    [ "zwapi_node_info_header", "structzwapi__node__info__header.html", "structzwapi__node__info__header" ],
    [ "zwapi_timestamp", "structzwapi__timestamp.html", "structzwapi__timestamp" ],
    [ "zwapi_tx_report", "structzwapi__tx__report.html", "structzwapi__tx__report" ],
    [ "zwave_command_handler_compare", "structzwave__command__handler__compare.html", "structzwave__command__handler__compare" ],
    [ "zwave_command_handler_compare_alphabetic", "structzwave__command__handler__compare__alphabetic.html", "structzwave__command__handler__compare__alphabetic" ],
    [ "zwave_command_handler_t", "structzwave__command__handler__t.html", "structzwave__command__handler__t" ],
    [ "zwave_controller_callbacks_t", "structzwave__controller__callbacks__t.html", "structzwave__controller__callbacks__t" ],
    [ "zwave_controller_connection_info", "structzwave__controller__connection__info.html", "structzwave__controller__connection__info" ],
    [ "zwave_controller_endpoint_t", "structzwave__controller__endpoint__t.html", "structzwave__controller__endpoint__t" ],
    [ "zwave_controller_storage_callback_t", "structzwave__controller__storage__callback__t.html", "structzwave__controller__storage__callback__t" ],
    [ "zwave_controller_transport", "structzwave__controller__transport.html", "structzwave__controller__transport" ],
    [ "zwave_crc16_encapsulation_frame", "structzwave__crc16__encapsulation__frame.html", "structzwave__crc16__encapsulation__frame" ],
    [ "zwave_key_protocol_combination", "structzwave__key__protocol__combination.html", "structzwave__key__protocol__combination" ],
    [ "zwave_minimum_frame", "structzwave__minimum__frame.html", "structzwave__minimum__frame" ],
    [ "zwave_multi_channel_encapsulation_frame", "structzwave__multi__channel__encapsulation__frame.html", "structzwave__multi__channel__encapsulation__frame" ],
    [ "zwave_node_info_t", "structzwave__node__info__t.html", "structzwave__node__info__t" ],
    [ "zwave_rf_region_cache", "structzwave__rf__region__cache.html", "structzwave__rf__region__cache" ],
    [ "zwave_rx_receive_options_t", "structzwave__rx__receive__options__t.html", "structzwave__rx__receive__options__t" ],
    [ "zwave_s2_network_callbacks", "structzwave__s2__network__callbacks.html", "structzwave__s2__network__callbacks" ],
    [ "zwave_supervision_get_frame", "structzwave__supervision__get__frame.html", "structzwave__supervision__get__frame" ],
    [ "zwave_tx_group_compare", "structzwave__tx__group__compare.html", "structzwave__tx__group__compare" ],
    [ "zwave_tx_group_t", "structzwave__tx__group__t.html", "structzwave__tx__group__t" ],
    [ "zwave_tx_groups", "classzwave__tx__groups.html", "classzwave__tx__groups" ],
    [ "zwave_tx_incoming_frames", "classzwave__tx__incoming__frames.html", "classzwave__tx__incoming__frames" ],
    [ "zwave_tx_options", "structzwave__tx__options.html", "structzwave__tx__options" ],
    [ "zwave_tx_queue", "classzwave__tx__queue.html", "classzwave__tx__queue" ],
    [ "zwave_tx_queue_element", "structzwave__tx__queue__element.html", "structzwave__tx__queue__element" ],
    [ "zwave_tx_transport_options", "structzwave__tx__transport__options.html", "structzwave__tx__transport__options" ],
    [ "ZwaveCommandClassType", "classZwaveCommandClassType.html", "classZwaveCommandClassType" ]
];