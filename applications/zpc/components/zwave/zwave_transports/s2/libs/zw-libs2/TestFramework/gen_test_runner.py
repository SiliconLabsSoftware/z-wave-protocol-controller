#!/usr/bin/python

# Copyright (c) 2018 Silicon Laboratories Inc.

import sys
import os
import re
from io import open

n=0
regexp = r'^void (test_[A-Za-z0-9_]+)\(.*\).*'

filename, file_type = os.path.splitext(sys.argv[1])

funcs = []

for l in open(sys.argv[1], encoding='utf-8'):
    m = re.search(regexp, l)
    if(m):
        funcs.append( (m.group(1).strip(),n) )
    n=n+1

print(''' 
/* AUTOGENERATED FILE. DO NOT EDIT. */
''')

if(file_type == '.cpp'):
    print('''
extern "C" {
''')

print('''
  #include "unity.h"
  #include "unity_print.h"
  #include "unity_internals.h"
#ifndef __codasip__
  #include "string.h"
#endif /* __codasip__ */
''')

if(file_type == '.cpp'):
    print('''
}
''')

print('''
int verbose;
''')

for f in funcs:
    print("void {}();".format(f[0]))

print('''

// Inspired by how Unity creates the setUp and tearDown functions
// Purpose is a setup and teardown method called before suite is run,
// and after suite is run.
#if defined(UNITY_WEAK_ATTRIBUTE)
    void setUpSuite(void);
    void tearDownSuite(void);
    UNITY_WEAK_ATTRIBUTE void setUpSuite(void) { }
    UNITY_WEAK_ATTRIBUTE void tearDownSuite(void) { }
#elif defined(UNITY_WEAK_PRAGMA)
#   pragma weak setUpSuite
    void setUpSuite(void);
#   pragma weak tearDownSuite
    void tearDownSuite(void);
#else
    void setUpSuite(void);
    void tearDownSuite(void);
#endif

int main(int argc, char** argp) {
    int ret;
    setUpSuite();
    unity_print_init();
    UNITY_BEGIN();


    if(argc==2) {
      verbose=1;
''')
for f in funcs:
    print(' if(strcmp(argp[1],"{}") == 0)   UnityDefaultTestRun(&{}, "{}", {});'.format(f[0], f[0], f[0], f[1]))
print('''
    } else {

''')
for f in funcs:
    print('    UnityDefaultTestRun(&{}, "{}", {});'.format(f[0], f[0], f[1]))
print('''
    }

    ret = UNITY_END();
    unity_print_close();
    tearDownSuite();
    return ret;
}

''')
