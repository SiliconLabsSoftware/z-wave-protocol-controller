/******************************************************************************
 * # License
 * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
 ******************************************************************************
 * The licensor of this software is Silicon Laboratories Inc. Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement. This
 * software is distributed to you in Source Code format and is governed by the
 * sections of the MSLA applicable to Source Code.
 *
 *****************************************************************************/

{{zap_header}}

/**
 * @defgroup {{component_cmdparser_prefix}}_int ZigPC ZCL Command Parser Internal API
 * @ingroup {{component_cmdparser_prefix}}
 * @brief Internal API for Command Parser logic.
 *
 * @{
 */

#ifndef {{asSnakeCaseUpper (component_cmdparser_prefix)}}_INT_H
#define {{asSnakeCaseUpper (component_cmdparser_prefix)}}_INT_H

#include "zcl_command_parser.h"

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Check to see if the cluster ID and command ID is supported by the
 * command parser.
 *
 * @param cluster_id  ZCL cluster ID value
 * @param command_id  ZCL command ID value
 * @return bool       TRUE if the cluster command can be parsed, FALSE if not.
 */
bool {{component_cmdparser_prefix}}_cluster_command_supported(zcl_cluster_id_t cluster_id,
                                                              zcl_command_id_t command_id);

/**
 * @brief Invoke any registered callbacks upon successful command parsing.
 *
 * @param eui64       Source device identifier
 * @param endpoint_id Source endpoint identifier
 * @param cluster_id  ZCL cluster ID
 * @param command_id  ZCL command ID
 * @param data        Command parsed data
 */
void zigpc_zclcmdparse_invoke_callback(
  zigbee_eui64_t eui64,
  zigbee_endpoint_id_t endpoint_id,
  zcl_cluster_id_t cluster_id,
  zcl_command_id_t command_id,
  const zigpc_zclcmdparse_callback_data_t *data);

/**
 * @brief ZigPC Gateway event handler for commands received from the network.
 * @param event_data      data associated with command event.
 * not.
 */
void {{component_cmdparser_prefix}}_on_command_received(void* event_data);

/**
 * @brief Reset all command parser listeners.
 *
 */
void {{component_cmdparser_prefix}}_reset_listeners(void);


#ifdef __cplusplus
}
#endif

#endif /* {{asSnakeCaseUpper (component_cmdparser_prefix)}}_INT_H */

/** @} end {{component_cmdparser_prefix}}_int */
