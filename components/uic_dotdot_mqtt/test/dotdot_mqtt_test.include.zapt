/******************************************************************************
 * # License
 * <b>Copyright 2021 Silicon Laboratories Inc. www.silabs.com</b>
 ******************************************************************************
 * The licensor of this software is Silicon Laboratories Inc. Your use of this
 * software is governed by the terms of Silicon Labs Master Software License
 * Agreement (MSLA) available at
 * www.silabs.com/about-us/legal/master-software-license-agreement. This
 * software is distributed to you in Source Code format and is governed by the
 * sections of the MSLA applicable to Source Code.
 *
 *****************************************************************************/
static unsigned int num_command_callbacks = 0;

{{#zcl_clusters}}{{#if (supportedCluster label)}}{{#zcl_commands}}
static unsigned int {{asCommandCallback this}}_count;
static sl_status_t {{asCommandCallback this}}_func(
    dotdot_unid_t unid,
    dotdot_endpoint_id_t endpoint,
    uic_mqtt_dotdot_callback_call_type_t callback_type{{#zcl_command_arguments}}{{#first}},{{/first}}
{{#if isArray}}
    uint8_t {{asSnakeCaseLower label}}_count,
    {{#unless (isString type)}}const {{/unless}}{{asUnderlyingType type}} *{{asSnakeCaseLower label}}{{listComma this}}
{{else}}
    {{asUnderlyingType type}} {{asSnakeCaseLower label}}{{listComma this}}
{{/if}}{{/zcl_command_arguments}}
) {
  {{asCommandCallback this}}_count++;
  num_command_callbacks++;
  return SL_STATUS_OK;
}
{{/zcl_commands}}{{/if}}{{/zcl_clusters}}
static unsigned int set_all_callbacks()
{
  unsigned int num_callbacks = 0;
  {{#zcl_clusters}}{{#if (supportedCluster label)}}{{#zcl_commands}}
  {{asCommandCallback this}}_set(&{{asCommandCallback this}}_func);
  num_callbacks++;{{/zcl_commands}}{{/if}}{{/zcl_clusters}}
  return num_callbacks;
}

static void unset_all_callbacks()
{
  {{#zcl_clusters}}{{#if (supportedCluster label)}}{{#zcl_commands}}
  {{asCommandCallback this}}_clear();{{/zcl_commands}}
  {{dotdot_prefix}}_clear_{{asSnakeCaseLower label}}_write_attributes_callbacks();{{/if}}{{/zcl_clusters}}
}

static void reset_callback_counters()
{
  {{#zcl_clusters}}{{#if (supportedCluster label)}}{{#zcl_commands}}
  {{asCommandCallback this}}_count = 0;{{/zcl_commands}}{{/if}}{{/zcl_clusters}}
}
