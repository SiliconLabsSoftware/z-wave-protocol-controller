// --------
// Z-Wave Meter attributes
def zwTYPE        0x3205
def zwSCALE       0x3206
def zwRATE_TYPE   0x3207
def zwVALUE       0x3208
def zwPRECISION   0x3209

// Z-Wave indices (i.e., Z-Wave Metering Type)
def zwELECTRIC_METER_TYPE 1
def zwGAS_METER_TYPE 2
def zwWATER_METERING_TYPE 3
def zwHEAT_METERING_TYPE 4
def zwCOOLING_METERING_TYPE 5

// Scale for Z-Wave Metering Types
def zwCUBIC_METER_SCALE 0
def zwCUBIC_FEET_SCALE 1
def zwKWH_SCALE 0
def zwKW_SCALE  2

// Z-Wave rate types
def DEFAULT   0
def IMPORT    1
def EXPORT    2

// ZCL Metering types
def zbELECTRIC_METER_TYPE 0
def zbGAS_METERING_TYPE 1
def zbWATER_METERING_TYPE 2
def zbHEAT_METERING_TYPE 5
def zbCOOLING_METERING_TYPE 6

// Scale for ZCL Metering
def zbKWH_KW 0
def zbCUBIC_METER 1
def zbCUBIC_FEET 2
def zbUS_GALLONS_US 4
def zbIMPERIAL_GALLONS 5
def zbLITERS 7
def zbUNIT_LESS 0x0B

// ZCL Metering attributes
def zbMETERING_CURRENT_SUMMATION_DELIVERED 0x07020000
def zbMETERING_CURRENT_SUMMATION_RECEIVED  0x07020001
def zbMETERING_UNIT_OF_MEASURE 0x07020300
def zbMETERING_SUMMATION_FORMATTING 0x07020303
def zbMETERING_METERING_DEVICE_TYPE 0x07020306

def zbMETERING_SUMMATION_FORMATTING_MASK 0xFF

// If different metering type is supported under the same endpoints,
// the dotdot Current Summation delivery metering report and its' related
// attribute such as device type and unit of measurements will be overwritten.
// Note this this issue would be solved using mapper changes (mapper change v2).

// We use the following priority:
// 1. Electric Meters
// 2. Gas Meters
// 3. Water Meters
// 4. Heat Meters
// 5. Cool Meters
// The first available meter information will be mapped, if more than 1 meter type
// is avilable, only the one with highest priority will be mapped.

scope 0 {

  // Bitmask of the metering device type.
  r'zbMETERING_METERING_DEVICE_TYPE =
    if ( e'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE)  zbELECTRIC_METER_TYPE
    if ( e'zwTYPE[zwGAS_METER_TYPE].zwSCALE) zbGAS_METERING_TYPE
    if ( e'zwTYPE[zwWATER_METERING_TYPE].zwSCALE) zbWATER_METERING_TYPE
    if ( e'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE ) zbHEAT_METERING_TYPE
    if ( e'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE )  zbCOOLING_METERING_TYPE
    undefined

  r'zbMETERING_UNIT_OF_MEASURE =
    if ( e'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE]) zbKWH_KW
    if ( e'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE]) zbKWH_KW
    if ( e'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE]) zbCUBIC_METER
    if ( e'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE]) zbCUBIC_FEET
    if ( e'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE]) zbCUBIC_METER
    if ( e'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE]) zbCUBIC_FEET
    if ( e'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE]) zbKWH_KW
    if ( e'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE]) zbKWH_KW
    undefined

  // Summation delivered:
  r'zbMETERING_CURRENT_SUMMATION_DELIVERED =
    // ELECTRIC Metering with kWh, else kW
    ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    or ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    // Gas meter
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    // Water Metering with m^3. This information won't be available if Gas metering is present.
    or ( r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    or ( r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    // HEAT Metering with kWh. This information won't be available if Gas or Water metering is present.
    or ( r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )
    // COOLing Metering with kWh. This information won't be available if Gas or Water or heat metering is present.
    or ( r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwVALUE / (10 ** r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[IMPORT].zwPRECISION) )
    or ( r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwVALUE/(10 ** r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[DEFAULT].zwPRECISION) )

  r'zbMETERING_CURRENT_SUMMATION_RECEIVED =
    // Electric meter
    ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )
    or ( r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwELECTRIC_METER_TYPE].zwSCALE[zwKW_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )
    // Gas metering
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )
    or ( r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwGAS_METER_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )
    // Water Metering. Has lower priority than Gas metering.
    or (r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_METER_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION))
    or (r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwWATER_METERING_TYPE].zwSCALE[zwCUBIC_FEET_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION))
    // Heat
    or ( r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwHEAT_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )
    // Cooling
    or ( r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwVALUE / (10 ** r'zwTYPE[zwCOOLING_METERING_TYPE].zwSCALE[zwKWH_SCALE].zwRATE_TYPE[EXPORT].zwPRECISION) )

  // Summation formatting, we just set that to 0.
  r'zbMETERING_SUMMATION_FORMATTING =
    if (r'zbMETERING_CURRENT_SUMMATION_RECEIVED) 0
    if (r'zbMETERING_CURRENT_SUMMATION_DELIVERED) 0
    undefined

}
